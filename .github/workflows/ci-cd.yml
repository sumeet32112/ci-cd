name: CI/CD Pipeline

# Triggers: when to run this workflow
on:
  push:
    branches: [ main, develop ]  # Run on pushes to main/develop
  pull_request:
    branches: [ main ]           # Run on PRs to main

# Environment variables used across jobs
env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: ${{ github.repository }}/recipes-api
  FRONTEND_IMAGE_NAME: ${{ github.repository }}/recipes-ui

jobs:
  # Job 1: Test Backend
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'  # Eclipse Temurin (recommended)

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run backend tests
        working-directory: ./recipes-api
        run: |
          ./mvnw clean test
          ./mvnw jacoco:report  # Generate test coverage report

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()  # Upload even if tests fail
        with:
          name: backend-test-results
          path: recipes-api/target/surefire-reports/

  # Job 2: Test Frontend
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: recipes-ui/package-lock.json

      - name: Install dependencies
        working-directory: ./recipes-ui
        run: npm ci  # Clean install from package-lock.json

      - name: Run linting
        working-directory: ./recipes-ui
        run: npm run lint

      - name: Run frontend tests
        working-directory: ./recipes-ui
        run: npm run test:ci  # Headless testing

      - name: Build frontend
        working-directory: ./recipes-ui
        run: npm run build --prod

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: recipes-ui/dist/

  # Job 3: Build and Push Docker Images (only on main branch)
  build-and-push:
    needs: [test-backend, test-frontend]  # Wait for tests to pass
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    permissions:
      contents: read
      packages: write  # Permission to push to GitHub Container Registry

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build and push backend image
      - name: Extract backend metadata
        id: backend-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./recipes-api
          push: true
          tags: ${{ steps.backend-meta.outputs.tags }}
          labels: ${{ steps.backend-meta.outputs.labels }}
          cache-from: type=gha  # GitHub Actions cache
          cache-to: type=gha,mode=max

      # Build and push frontend image
      - name: Extract frontend metadata
        id: frontend-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./recipes-ui
          push: true
          tags: ${{ steps.frontend-meta.outputs.tags }}
          labels: ${{ steps.frontend-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

# Job 4: Deploy to Production (placeholder - customize based on your hosting)
#  deploy:
#    needs: build-and-push
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#
#    environment:
#      name: production
#      url: https://your-app-domain.com  # Replace with your actual domain
#
#    steps:
#      - name: Deploy to production
#        run: |
#          echo "ðŸš€ Deploying to production..."
#          # Add your deployment commands here
#          # Examples:
#          # - kubectl apply -f k8s/
#          # - docker-compose up -d
#          # - ssh to server and pull new images
#          # - Update cloud service (AWS ECS, Azure Container Instances, etc.)
#          echo "âœ… Deployment completed!"